{"version":3,"sources":["components/home/home.js","components/scrollIcon/scrollIcon.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","className","src","alt","href","target","rel","ScrollIcon","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mRA0HeA,MApHf,SAAcC,GACZ,OACE,oCACE,6BAASC,UAAU,WACjB,wBAAIA,UAAU,mBAAd,YACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,WACb,yBAAKC,IAAK,WAAYC,IAAI,SAE5B,yBAAKF,UAAU,QACb,uBAAGA,UAAU,QAAb,wBACA,uBAAGA,UAAU,SACX,0DADF,yBAKJ,yBAAKA,UAAU,SACb,2BACE,uBACEG,KAAK,iCACLC,OAAO,SACPC,IAAI,uBAEJ,yBAAKJ,IAAI,qBAAqBC,IAAI,WAClC,0CAGJ,2BACE,uBACEC,KAAK,0CACLC,OAAO,SACPC,IAAI,uBAEJ,yBAAKJ,IAAI,uBAAuBC,IAAI,aACpC,4CAGJ,2BACE,uBACEC,KAAK,mCACLC,OAAO,SACPC,IAAI,uBAEJ,yBAAKJ,IAAI,qBAAqBC,IAAI,WAClC,0CAGJ,2BACE,uBACEC,KAAK,iCACLC,OAAO,SACPC,IAAI,uBAEJ,yBAAKJ,IAAI,sBAAsBC,IAAI,YACnC,2CAGJ,2BACE,uBACEC,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAEJ,yBAAKJ,IAAI,oBAAoBC,IAAI,WACjC,4CAKR,yBAAKF,UAAU,mBACb,kBAAC,EAAD,QAGJ,iCACE,wBAAIA,UAAU,mBAAd,oBAGA,yBAAKA,UAAU,iBAAf,+CAIF,iCACE,wBAAIA,UAAU,mBAAd,aAGA,yBAAKA,UAAU,iBAAf,8CAIF,iCACE,wBAAIA,UAAU,mBAAd,YACW,uBAAGG,KAAK,wBAAwBE,IAAI,sBAAsBD,OAAO,UAAjE,gBAEX,yBAAKJ,UAAU,mBAGjB,iCACE,wBAAIA,UAAU,mBAAd,YACW,uBAAGG,KAAK,8BAA8BE,IAAI,sBAAsBD,OAAO,UAAvE,iBAEX,yBAAKJ,UAAU,mBAGjB,iCACE,wBAAIA,UAAU,mBAAd,YACW,uBAAGG,KAAK,wBAAwBE,IAAI,sBAAsBD,OAAO,UAAjE,eAEX,yBAAKJ,UAAU,qB,MCjGRM,MAbf,WACI,OAAO,yBAAKN,UAAU,gBAIlB,6BACI,0BAAMA,UAAU,wBAChB,0BAAMA,UAAU,wBAChB,0BAAMA,UAAU,6BCAbO,MARf,WACE,OACE,yBAAKP,UAAU,OACb,kBAAC,EAAD,QCKcQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8b537fad.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { ScrollIcon } from '../';\n\nimport \"./home.scss\";\n\nfunction Home(props) {\n  return (\n    <>\n      <section className=\"section\">\n        <h1 className=\"section__header\">About me</h1>\n        <div className=\"section__body\">\n          <div className=\"personal\">\n            <div className=\"picture\">\n              <img src={\"raj.jpeg\"} alt=\"raj\" />\n            </div>\n            <div className=\"info\">\n              <p className=\"name\">Raj Krishna Maharjan</p>\n              <p className=\"title\">\n                <span>Senior Software Engineer</span> at CODING MOUNTAIN\n              </p>\n            </div>\n          </div>\n          <div className=\"links\">\n            <p>\n              <a\n                href=\"https://github.com/maharjanraj\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img src=\"/social/github.svg\" alt=\"Github\" />\n                <span>Github</span>\n              </a>\n            </p>\n            <p>\n              <a\n                href=\"https://www.linkedin.com/in/rajmaharjan\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img src=\"/social/linkedin.svg\" alt=\"LinkedIn\" />\n                <span>LinkedIn</span>\n              </a>\n            </p>\n            <p>\n              <a\n                href=\"https://medium.com/@raj_maharjan\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img src=\"/social/medium.svg\" alt=\"Medium\" />\n                <span>Medium</span>\n              </a>\n            </p>\n            <p>\n              <a\n                href=\"https://twitter.com/esportsraj\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img src=\"/social/twitter.svg\" alt=\"Twitter\" />\n                <span>Twitter</span>\n              </a>\n            </p>\n            <p>\n              <a\n                href=\"https://dev.to/rajmaharjan\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img src=\"/social/devto.svg\" alt=\"Dev.to\" />\n                <span>Dev.to</span>\n              </a>\n            </p>\n          </div>\n        </div>\n        <div className=\"section__footer\">\n          <ScrollIcon />\n        </div>\n      </section>\n      <section>\n        <h1 className=\"section__header\">\n          Technical Skills\n        </h1>\n        <div className=\"section__body\">\n          Nodejs, Reactjs, Angular, Mongodb, GraphQL\n        </div>\n      </section>\n      <section>\n        <h1 className=\"section__header\">\n          Education\n        </h1>\n        <div className=\"section__body\">\n          Bachelor's Degree in Computer Engineering\n        </div>\n      </section>\n      <section>\n        <h1 className=\"section__header\">\n          Project: <a href=\"https://wasdarena.com\" rel=\"noopener noreferrer\" target=\"_blank\"> WASD Arena</a>\n        </h1>\n        <div className=\"section__body\">\n        </div>\n      </section>\n      <section>\n        <h1 className=\"section__header\">\n          Project: <a href=\"https://web.referral-ai.com\" rel=\"noopener noreferrer\" target=\"_blank\">Referral-AI </a>\n        </h1>\n        <div className=\"section__body\">\n        </div>\n      </section>\n      <section>\n        <h1 className=\"section__header\">\n          Project: <a href=\"https://aidstream.org\" rel=\"noopener noreferrer\" target=\"_blank\">Aidstream </a>\n        </h1>\n        <div className=\"section__body\">\n        </div>\n      </section>\n    </>\n  );\n}\n\nHome.propTypes = {};\nexport default Home;\n","import React from 'react';\n\nimport './scrollIcon.scss';\n\nfunction ScrollIcon() {\n    return <div className=\"mouse_scroll\">\n        {/* <div className=\"mouse\">\n            <div className=\"wheel\"></div>\n        </div> */}\n        <div>\n            <span className=\"m_scroll_arrows one\"></span>\n            <span className=\"m_scroll_arrows two\"></span>\n            <span className=\"m_scroll_arrows three\"></span>\n        </div>\n    </div>\n}\n\nexport default ScrollIcon;","import React from \"react\";\nimport \"./App.scss\";\nimport { Home } from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}